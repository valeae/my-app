name: Assign Copilot Reviewer

on:
  pull_request:
    types: [opened, reopened, ready_for_review]
    branches:
      - master

permissions:
  contents: read
  pull-requests: write

jobs:
  assign-copilot:
    runs-on: ubuntu-latest

    steps:
      - name: Log PR info
        id: log_pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            core.setOutput("prNumber", pr.number);
            core.setOutput("baseBranch", pr.base.ref);
            core.setOutput("labels", pr.labels.map(l => l.name).join(", ") || "none");
            console.log(`PR #${pr.number}`);
            console.log(`Base branch: ${pr.base.ref}`);
            console.log(`Labels: ${pr.labels.map(l => l.name).join(", ") || "none"}`);

      - name: Check if should assign Copilot
        id: check_branch
        uses: actions/github-script@v7
        with:
          script: |
            const baseBranch = "${{ steps.log_pr.outputs.baseBranch }}";
            const shouldAssign = baseBranch === "master";
            core.setOutput("shouldAssign", shouldAssign);
            console.log(`Should assign Copilot: ${shouldAssign}`);

      - name: Assign Copilot reviewer
        if: steps.check_branch.outputs.shouldAssign == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const prNumber = parseInt("${{ steps.log_pr.outputs.prNumber }}");
              const reviewer = "Copilot";
              await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                reviewers: [reviewer],
              });
              console.log("✅ Copilot assigned as reviewer");
            } catch (error) {
              console.warn(`⚠️ Could not assign Copilot: ${error.message}`);
            }
