name: Check .env keys coherence

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  env-check:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compare .env files
        id: env_check
        shell: bash
        run: |
          # Buscar todos los .env en cualquier carpeta, incluyendo .env.example
          mapfile -t ENV_FILES < <(find . -type f -name '.env*' | sort)

          if [ ${#ENV_FILES[@]} -lt 2 ]; then
            MSG="ℹ️ Solo se encontró ${#ENV_FILES[@]} archivo(s) .env. Se necesitan al menos 2 para comparar."
            echo "ENV_RESULT<<EOF" >> "$GITHUB_ENV"
            echo -e "$MSG" >> "$GITHUB_ENV"
            echo "EOF" >> "$GITHUB_ENV"
            echo "has_missing=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Construir universo de keys (todas las claves de todos los .env, incluido .env.example)
          : > all_vars.txt
          for file in "${ENV_FILES[@]}"; do
            grep -E '^[A-Za-z_][A-Za-z0-9_]*=' "$file" | cut -d'=' -f1 >> all_vars.txt || true
          done
          sort -u all_vars.txt > unique_vars.txt

          REPORT=""
          HAS_MISSING=false

          for file in "${ENV_FILES[@]}"; do
            grep -E '^[A-Za-z_][A-Za-z0-9_]*=' "$file" | cut -d'=' -f1 | sort > current_vars.txt || true
            missing=$(comm -23 unique_vars.txt current_vars.txt || true)

            if [ -n "$missing" ]; then
              REPORT+="### 🚨 Variables faltantes en \`$file\`:\n"
              while IFS= read -r var; do
                [ -n "$var" ] && REPORT+="- \`$var\`\n"
              done <<< "$missing"
              REPORT+="\n"
              HAS_MISSING=true
            fi
          done

          if [ "$HAS_MISSING" = true ]; then
            FINAL="## 🔍 Variables de Entorno - Faltan Variables\n\n"
            FINAL+="### 📋 Archivos analizados:\n"
            for file in "${ENV_FILES[@]}"; do
              count=$(grep -cE '^[A-Za-z_][A-Za-z0-9_]*=' "$file" 2>/dev/null || echo 0)
              FINAL+="- \`$file\` (${count} variables)\n"
            done
            FINAL+="\n${REPORT}---\n"
            FINAL+="💡 **Sugerencia**: Asegúrate de que todas las variables estén presentes en todos los archivos .env.\n"

            echo "ENV_RESULT<<EOF" >> "$GITHUB_ENV"
            echo "<!-- env-check-report -->" >> "$GITHUB_ENV"
            echo -e "$FINAL" >> "$GITHUB_ENV"
            echo "EOF" >> "$GITHUB_ENV"

            echo "has_missing=true" >> "$GITHUB_OUTPUT"
            exit 1
          else
            OKMSG="<!-- env-check-report -->\n✅ Todos los archivos .env tienen las mismas keys."
            echo "ENV_RESULT<<EOF" >> "$GITHUB_ENV"
            echo -e "$OKMSG" >> "$GITHUB_ENV"
            echo "EOF" >> "$GITHUB_ENV"
            echo "has_missing=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

      - name: Comment missing variables in PR
        if: ${{ always() && steps.env_check.outputs.has_missing == 'true' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const marker = '<!-- env-check-report -->';
            const body = process.env.ENV_RESULT || `${marker}\n❌ No se pudo generar el reporte.`;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existing = comments.find(c =>
              c.user?.login === 'github-actions[bot]' && c.body?.includes(marker)
            );

            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body
              });
            }

      - name: Remove env-check comment (no missing now)
        if: ${{ always() && steps.env_check.outputs.has_missing == 'false' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const marker = '<!-- env-check-report -->';
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existing = comments.find(c =>
              c.user?.login === 'github-actions[bot]' && c.body?.includes(marker)
            );

            if (existing) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id
              });
            }
